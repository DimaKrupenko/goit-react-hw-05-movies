{"version":3,"file":"static/js/681.b4765b23.chunk.js","mappings":"yNAuCA,UAnCgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAlBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,gGAElBN,EAAWG,GACXI,EAAAA,EAAAA,WAAeR,IAEXA,EALc,gCAMUQ,EAAAA,EAAAA,YANV,cAMZC,EANY,OAOlBN,EAAWM,GAPO,4EAYdC,QAAQC,IAAR,MAZc,0DAAH,qDAehBJ,GACF,GAAE,CAACP,EAASI,KAET,wBACKF,GAAWA,EAAQU,KAAI,SAAAC,GAAM,OAC1B,2BACI,wBAAKA,EAAOC,SACXD,EAAOE,UAFHF,EAAOG,GADU,KAQzC,C,8FCnCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMT,EAAM,CACjBU,SAAU,gCACVC,QAAS,mCACTC,aAAc,qBACdC,WAAY,eACZC,MAAO,GACPtB,QAAS,GAETuB,SARiB,SAQRD,GACPd,EAAIc,MAAQA,CACb,EAEDrB,WAZiB,SAYND,GACTQ,EAAIR,QAAUA,CACf,EAEDwB,WAhBiB,WAiBfhB,EAAIc,MAAQ,EACb,EAEKG,YApBW,WAoBI,IAAD,4HACZC,EADY,UACH,EAAKR,UADF,OACa,EAAKE,aADlB,oBAC0C,EAAKD,SAD/C,SAEKF,EAAAA,EAAAA,IAAUS,GAFf,cAEZC,EAFY,yBAGXA,EAASC,KAAKC,SAHH,4CAInB,EAEKC,YA1BW,WA0BI,IAAD,4HACZC,EADY,UACG,EAAKb,UADR,OACmB,EAAKG,WADxB,kBAC4C,EAAKC,MADjD,oBACkE,EAAKH,SADvE,SAEKF,EAAAA,EAAAA,IAAUc,GAFf,cAEZJ,EAFY,yBAGXA,EAASC,KAAKC,SAHH,4CAInB,EAEKG,WAhCW,WAgCG,IAAD,4HACXC,EADW,UACK,EAAKf,SADV,iBAC2B,EAAKlB,QADhC,oBACmD,EAAKmB,SADxD,SAEMF,EAAAA,EAAAA,IAAUgB,GAFhB,cAEXN,EAFW,yBAGVA,EAASC,MAHC,4CAIlB,EAEKM,QAtCW,WAsCA,IAAD,4HACRC,EADQ,UACK,EAAKjB,SADV,iBAC2B,EAAKlB,QADhC,4BAC2D,EAAKmB,SADhE,SAESF,EAAAA,EAAAA,IAAUkB,GAFnB,cAERR,EAFQ,yBAGPA,EAASC,KAAKQ,MAHP,4CAIf,EAEK7B,UA5CW,WA4CE,IAAD,4HACV8B,EADU,UACM,EAAKnB,SADX,iBAC4B,EAAKlB,QADjC,4BAC4D,EAAKmB,SADjE,SAEOF,EAAAA,EAAAA,IAAUoB,GAFjB,cAEVV,EAFU,yBAGTA,EAASC,KAAKC,SAHL,4CAIjB,E","sources":["components/Reviews.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API } from '../services/api';\n\nconst Reviews = () => {\n    const [movieId, setMovieId] = useState('');\n    const [reviews, setReviews] = useState('');\n  \n    const { Id } = useParams();\n    useEffect(() => {\n        const getRevies = async () => {\n            try {\n        setMovieId(Id);\n        API.setMovieId(movieId);\n        \n        if (movieId) {\n        const reviewsMovies = await API.getRevies(); \n        setReviews(reviewsMovies);\n        return\n        }\n         }\n        catch (error) {\n            console.log(error)\n        }\n       }\n       getRevies()\n    }, [movieId, Id])   \n    return (\n        <ul>\n            {reviews && reviews.map(review => (\n                <li key={review.id}>\n                    <h2>{review.author}</h2>\n                    {review.content}\n                </li>\n           ))}\n        </ul>\n    )\n}\n\nexport default Reviews","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: 'a0a346c810a8c3392ff6f3a908f46de3',\n  URL_TRENDING: 'trending/movie/day',\n  URL_SEARCH: 'search/movie',\n  query: [],\n  movieId: '',\n\n  setQuery(query) {\n    API.query = query;\n  },\n\n  setMovieId(movieId) {\n    API.movieId = movieId;\n  },\n\n  resetQuery() {\n    API.query = '';\n  },\n\n  async addMaterial() {\n    const url = `${this.BASE_URL}${this.URL_TRENDING}?api_key=${this.API_KEY}`;\n    const response = await axios.get(url);\n    return response.data.results;\n  },\n\n  async searchMovie() {\n    const urlSearch = `${this.BASE_URL}${this.URL_SEARCH}?query=${this.query}&api_key=${this.API_KEY}`;\n    const response = await axios.get(urlSearch);\n    return response.data.results;\n  },\n\n  async getDetails() {\n    const urlDetails = `${this.BASE_URL}movie/${this.movieId}?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlDetails);\n    return response.data;\n  },\n\n  async getCast() {\n    const urlCast = `${this.BASE_URL}movie/${this.movieId}/credits?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlCast);\n    return response.data.cast;\n  },\n\n  async getRevies() {\n    const urlReviews = `${this.BASE_URL}movie/${this.movieId}/reviews?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlReviews);\n    return response.data.results;\n  },\n};\n"],"names":["useState","movieId","setMovieId","reviews","setReviews","Id","useParams","useEffect","getRevies","API","reviewsMovies","console","log","map","review","author","content","id","axios","BASE_URL","API_KEY","URL_TRENDING","URL_SEARCH","query","setQuery","resetQuery","addMaterial","url","response","data","results","searchMovie","urlSearch","getDetails","urlDetails","getCast","urlCast","cast","urlReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/884.1b51f13f.chunk.js","mappings":"iOAqHA,UAhHqB,WAAO,IAAD,IACzB,GAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAETC,GAAOC,EAAAA,EAAAA,MAAPD,GAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gGAEfR,EAAWK,GACXI,EAAAA,EAAAA,WAAeV,IAEXA,EALW,gCAMYU,EAAAA,EAAAA,aANZ,cAMTC,EANS,OAOfR,EAAWQ,GAPI,4EAWfC,QAAQC,IAAR,MAXe,0DAAH,qDAchBJ,GACD,GAAE,CAACT,EAASM,KAIX,iBACGQ,MAAO,CAENC,QAAS,OACTC,IAAK,OACNC,SAAU,QALb,WAQE,gBACEH,MAAO,CACPC,QAAS,OACbG,MAAO,OACPC,UAAW,QAJT,UAOE,SAAC,KAAD,CAAMC,GAAE,oBAAEhB,EAASiB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,wBAIF,gBACEC,IAAG,0CAAqCrB,EAAQsB,aAChDC,IAAI,MAGN,0BACGvB,EAAQwB,gBACT,kBACCxB,EAAQyB,iBAEX,gBACEb,MAAO,CACXI,MAAO,QAFL,yBAIchB,EAAQ0B,eACtB,sCACA,cACEd,MAAO,CACXI,MAAO,QAFL,SAMGhB,EAAQ2B,YAOX,eACEf,MAAO,CACXI,MAAO,QAFL,qCAIA,wBACE,SAAC,KAAD,CAAME,GAAG,OACPN,MAAO,CACPC,QAAS,OACTe,eAAgB,SAChBC,OAAQ,kBACRb,MAAO,OACPc,WAAY,QANd,qBAWF,wBACE,SAAC,KAAD,CAAMZ,GAAG,UACPN,MAAO,CACPC,QAAS,OACTe,eAAgB,SAChBC,OAAQ,kBACRb,MAAO,OACPc,WAAY,QANd,wBAUF,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UAEE,SAAC,KAAD,QAMP,C,8FCjHDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMzB,EAAM,CACjB0B,SAAU,gCACVC,QAAS,mCACTC,aAAc,qBACdC,WAAY,eACZC,MAAO,GACPxC,QAAS,GAETyC,SARiB,SAQRD,GACP9B,EAAI8B,MAAQA,CACb,EAEDvC,WAZiB,SAYND,GACTU,EAAIV,QAAUA,CACf,EAED0C,WAhBiB,WAiBfhC,EAAI8B,MAAQ,EACb,EAEKG,YApBW,WAoBI,IAAD,4HACZC,EADY,UACH,EAAKR,UADF,OACa,EAAKE,aADlB,oBAC0C,EAAKD,SAD/C,SAEKF,EAAAA,EAAAA,IAAUS,GAFf,cAEZC,EAFY,yBAGXA,EAASC,KAAKC,SAHH,4CAInB,EAEKC,YA1BW,WA0BI,IAAD,4HACZC,EADY,UACG,EAAKb,UADR,OACmB,EAAKG,WADxB,kBAC4C,EAAKC,MADjD,oBACkE,EAAKH,SADvE,SAEKF,EAAAA,EAAAA,IAAUc,GAFf,cAEZJ,EAFY,yBAGXA,EAASC,KAAKC,SAHH,4CAInB,EAEKtC,WAhCW,WAgCG,IAAD,4HACXyC,EADW,UACK,EAAKd,SADV,iBAC2B,EAAKpC,QADhC,oBACmD,EAAKqC,SADxD,SAEMF,EAAAA,EAAAA,IAAUe,GAFhB,cAEXL,EAFW,yBAGVA,EAASC,MAHC,4CAIlB,EAEKK,QAtCW,WAsCA,IAAD,4HACRC,EADQ,UACK,EAAKhB,SADV,iBAC2B,EAAKpC,QADhC,4BAC2D,EAAKqC,SADhE,SAESF,EAAAA,EAAAA,IAAUiB,GAFnB,cAERP,EAFQ,yBAGPA,EAASC,KAAKO,MAHP,4CAIf,EAEKC,UA5CW,WA4CE,IAAD,4HACVC,EADU,UACM,EAAKnB,SADX,iBAC4B,EAAKpC,QADjC,4BAC4D,EAAKqC,SADjE,SAEOF,EAAAA,EAAAA,IAAUoB,GAFjB,cAEVV,EAFU,yBAGTA,EAASC,KAAKC,SAHL,4CAIjB,E","sources":["pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { API } from '../services/api';\nimport { Suspense } from \"react\";\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movieId, setMovieId] = useState('');\n  const [details, setDetails] = useState([]);\n  const location = useLocation()\n  \n  const { Id } = useParams();\n\n  useEffect(() => {\n    const getDetails = async () => {\n      try {\n        setMovieId(Id);\n        API.setMovieId(movieId);\n        \n        if (movieId) {\n        const detailMovies = await API.getDetails(); \n        setDetails(detailMovies);\n        return\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getDetails();\n  }, [movieId, Id]);\n\n  return (\n    \n    <div\n       style={{\n       \n        display: 'flex',\n        gap: '10px',\n       flexWrap: 'wrap'\n      }}\n    >\n      <div\n        style={{\n        display: 'flex',\n    width: '100%',\n    marginTop: '20px',\n      }}\n      >\n        <Link to={location.state?.from ?? '/'}>Go back</Link>\n\n      </div>\n\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${details.poster_path}`}\n        alt=\"\"\n      />\n \n      <h2>\n        {details.original_title}\n        <br />\n        {details.release_date}\n      </h2>\n      <h3\n        style={{\n    width: '100%',\n        }}\n      >User score: {details.popularity}</h3>\n      <h3>Overview</h3>\n      <p\n        style={{\n    width: '100%',\n        }}\n      >\n        \n        {details.overview}\n      </p>\n      {/* <p>\n        Genres <br />\n        {details.genres.name}\n      </p> */}\n       \n      <h3\n        style={{\n    width: '100%',\n        }}>Additional information</h3>\n      <p>\n        <Link to='cast'\n          style={{\n          display: 'flex',\n          justifyContent: 'center',\n          border: '1px solid black',\n          width: '65px',\n          marginLeft: '10px'\n\n        }}\n        >Cast</Link>\n      </p>\n      <p>\n        <Link to='reviews'\n          style={{\n          display: 'flex',\n          justifyContent: 'center',\n          border: '1px solid black',\n          width: '65px',\n          marginLeft: '10px'\n        }}\n        >Reviews</Link>\n      </p>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        \n        <Outlet />\n\n      </Suspense>\n\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: 'a0a346c810a8c3392ff6f3a908f46de3',\n  URL_TRENDING: 'trending/movie/day',\n  URL_SEARCH: 'search/movie',\n  query: [],\n  movieId: '',\n\n  setQuery(query) {\n    API.query = query;\n  },\n\n  setMovieId(movieId) {\n    API.movieId = movieId;\n  },\n\n  resetQuery() {\n    API.query = '';\n  },\n\n  async addMaterial() {\n    const url = `${this.BASE_URL}${this.URL_TRENDING}?api_key=${this.API_KEY}`;\n    const response = await axios.get(url);\n    return response.data.results;\n  },\n\n  async searchMovie() {\n    const urlSearch = `${this.BASE_URL}${this.URL_SEARCH}?query=${this.query}&api_key=${this.API_KEY}`;\n    const response = await axios.get(urlSearch);\n    return response.data.results;\n  },\n\n  async getDetails() {\n    const urlDetails = `${this.BASE_URL}movie/${this.movieId}?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlDetails);\n    return response.data;\n  },\n\n  async getCast() {\n    const urlCast = `${this.BASE_URL}movie/${this.movieId}/credits?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlCast);\n    return response.data.cast;\n  },\n\n  async getRevies() {\n    const urlReviews = `${this.BASE_URL}movie/${this.movieId}/reviews?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlReviews);\n    return response.data.results;\n  },\n};\n"],"names":["useState","movieId","setMovieId","details","setDetails","location","useLocation","Id","useParams","useEffect","getDetails","API","detailMovies","console","log","style","display","gap","flexWrap","width","marginTop","to","state","from","src","poster_path","alt","original_title","release_date","popularity","overview","justifyContent","border","marginLeft","Suspense","fallback","axios","BASE_URL","API_KEY","URL_TRENDING","URL_SEARCH","query","setQuery","resetQuery","addMaterial","url","response","data","results","searchMovie","urlSearch","urlDetails","getCast","urlCast","cast","getRevies","urlReviews"],"sourceRoot":""}
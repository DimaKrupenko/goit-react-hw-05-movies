{"version":3,"file":"static/js/597.966882cf.chunk.js","mappings":"yNAiDA,UA7Ca,WACT,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAlBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAO,mCAAG,gGAEhBN,EAAWG,GACXI,EAAAA,EAAAA,WAAeR,IAEXA,EALY,gCAMWQ,EAAAA,EAAAA,UANX,cAMVC,EANU,OAOhBN,EAAUM,GAPM,4EAYZC,QAAQC,IAAR,MAZY,0DAAH,qDAedJ,GACN,GAAE,CAACP,EAASI,KAEL,0BACI,wBACKF,GAAUA,EAAOU,KAAI,SAAAC,GAAK,OACvB,gBACAC,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,OAAQ,iBACRC,aAAc,QALlB,WAQI,gBAAKC,IAAG,0CAAqCN,EAAMO,cAAgBC,IAAI,KACtER,EAAMS,OATFT,EAAMU,GADQ,OAiB1C,C,8FC7CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMhB,EAAM,CACjBiB,SAAU,gCACVC,QAAS,mCACTC,aAAc,qBACdC,WAAY,eACZC,MAAO,GACP7B,QAAS,GAET8B,SARiB,SAQRD,GACPrB,EAAIqB,MAAQA,CACb,EAED5B,WAZiB,SAYND,GACTQ,EAAIR,QAAUA,CACf,EAED+B,WAhBiB,WAiBfvB,EAAIqB,MAAQ,EACb,EAEKG,YApBW,WAoBI,IAAD,4HACZC,EADY,UACH,EAAKR,UADF,OACa,EAAKE,aADlB,oBAC0C,EAAKD,SAD/C,SAEKF,EAAAA,EAAAA,IAAUS,GAFf,cAEZC,EAFY,yBAGXA,EAASC,KAAKC,SAHH,4CAInB,EAEKC,YA1BW,WA0BI,IAAD,4HACZC,EADY,UACG,EAAKb,UADR,OACmB,EAAKG,WADxB,kBAC4C,EAAKC,MADjD,oBACkE,EAAKH,SADvE,SAEKF,EAAAA,EAAAA,IAAUc,GAFf,cAEZJ,EAFY,yBAGXA,EAASC,KAAKC,SAHH,4CAInB,EAEKG,WAhCW,WAgCG,IAAD,4HACXC,EADW,UACK,EAAKf,SADV,iBAC2B,EAAKzB,QADhC,oBACmD,EAAK0B,SADxD,SAEMF,EAAAA,EAAAA,IAAUgB,GAFhB,cAEXN,EAFW,yBAGVA,EAASC,MAHC,4CAIlB,EAEK5B,QAtCW,WAsCA,IAAD,4HACRkC,EADQ,UACK,EAAKhB,SADV,iBAC2B,EAAKzB,QADhC,4BAC2D,EAAK0B,SADhE,SAESF,EAAAA,EAAAA,IAAUiB,GAFnB,cAERP,EAFQ,yBAGPA,EAASC,KAAKO,MAHP,4CAIf,EAEKC,UA5CW,WA4CE,IAAD,4HACVC,EADU,UACM,EAAKnB,SADX,iBAC4B,EAAKzB,QADjC,4BAC4D,EAAK0B,SADjE,SAEOF,EAAAA,EAAAA,IAAUoB,GAFjB,cAEVV,EAFU,yBAGTA,EAASC,KAAKC,SAHL,4CAIjB,E","sources":["components/Cast.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API } from '../services/api';\n\nconst Cast = () => {\n    const [movieId, setMovieId] = useState('');\n    const [actors, setActors] = useState('');\n  \n    const { Id } = useParams();\n    useEffect(() => {\n        const getCast = async () => {\n            try {\n        setMovieId(Id);\n        API.setMovieId(movieId);\n        \n        if (movieId) {\n        const actorlMovies = await API.getCast(); \n        setActors(actorlMovies);\n        return\n        }\n         }\n        catch (error) {\n            console.log(error)\n        }\n       }\n       getCast()\n}, [movieId, Id])\n    return (\n        <div>\n            <ul>\n                {actors && actors.map(actor => (\n                    <li key={actor.id}\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        border: '1px solid grey',\n                        marginBottom: '10px'\n                    }}\n                    >\n                        <img src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`} alt=\"\" />\n                        {actor.name}\n\n                    </li>\n                ))}\n            </ul>\n    </div>\n)\n}\n\nexport default Cast","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: 'a0a346c810a8c3392ff6f3a908f46de3',\n  URL_TRENDING: 'trending/movie/day',\n  URL_SEARCH: 'search/movie',\n  query: [],\n  movieId: '',\n\n  setQuery(query) {\n    API.query = query;\n  },\n\n  setMovieId(movieId) {\n    API.movieId = movieId;\n  },\n\n  resetQuery() {\n    API.query = '';\n  },\n\n  async addMaterial() {\n    const url = `${this.BASE_URL}${this.URL_TRENDING}?api_key=${this.API_KEY}`;\n    const response = await axios.get(url);\n    return response.data.results;\n  },\n\n  async searchMovie() {\n    const urlSearch = `${this.BASE_URL}${this.URL_SEARCH}?query=${this.query}&api_key=${this.API_KEY}`;\n    const response = await axios.get(urlSearch);\n    return response.data.results;\n  },\n\n  async getDetails() {\n    const urlDetails = `${this.BASE_URL}movie/${this.movieId}?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlDetails);\n    return response.data;\n  },\n\n  async getCast() {\n    const urlCast = `${this.BASE_URL}movie/${this.movieId}/credits?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlCast);\n    return response.data.cast;\n  },\n\n  async getRevies() {\n    const urlReviews = `${this.BASE_URL}movie/${this.movieId}/reviews?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlReviews);\n    return response.data.results;\n  },\n};\n"],"names":["useState","movieId","setMovieId","actors","setActors","Id","useParams","useEffect","getCast","API","actorlMovies","console","log","map","actor","style","display","alignItems","border","marginBottom","src","profile_path","alt","name","id","axios","BASE_URL","API_KEY","URL_TRENDING","URL_SEARCH","query","setQuery","resetQuery","addMaterial","url","response","data","results","searchMovie","urlSearch","getDetails","urlDetails","urlCast","cast","getRevies","urlReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/134.8fdb5d21.chunk.js","mappings":"iOAmDA,UA7Ce,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEjBC,QAAQC,IAAIL,GACZ,IAKMM,EAAW,mCAAG,oGAGRC,EAAAA,EAAAA,aACAA,EAAAA,EAAAA,SAAaZ,GAJL,SAKYY,EAAAA,EAAAA,cALZ,OAKFC,EALE,OAMRV,EAAcU,GANN,gDAURJ,QAAQC,IAAR,MAVQ,yDAAH,qDAgBjB,OACI,4BACA,kBAAOI,KAAK,OAAOC,SAvBN,SAACC,GACdf,EAAUe,EAAIC,OAAOC,OACrBZ,EAAgB,CAAEa,OAAQH,EAAIC,OAAOC,OACpC,KAqBD,mBAAQE,QAAST,EAAjB,qBACA,wBACKT,GAAcA,EAAWmB,KAAI,SAAAC,GAAS,OACvC,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAUE,IAAMC,MAAO,CAACC,KAAMnB,GAA3C,SACKe,EAAUK,SAFVL,EAAUE,GADoB,QASlD,C,8FC/CDI,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMhB,EAAM,CACjBiB,SAAU,gCACVC,QAAS,mCACTC,aAAc,qBACdC,WAAY,eACZC,MAAO,GACPC,QAAS,GAETC,SARiB,SAQRF,GACPrB,EAAIqB,MAAQA,CACb,EAEDG,WAZiB,SAYNF,GACTtB,EAAIsB,QAAUA,CACf,EAEDG,WAhBiB,WAiBfzB,EAAIqB,MAAQ,EACb,EAEKK,YApBW,WAoBI,IAAD,4HACZC,EADY,UACH,EAAKV,UADF,OACa,EAAKE,aADlB,oBAC0C,EAAKD,SAD/C,SAEKF,EAAAA,EAAAA,IAAUW,GAFf,cAEZC,EAFY,yBAGXA,EAASC,KAAKC,SAHH,4CAInB,EAEK/B,YA1BW,WA0BI,IAAD,4HACZgC,EADY,UACG,EAAKd,UADR,OACmB,EAAKG,WADxB,kBAC4C,EAAKC,MADjD,oBACkE,EAAKH,SADvE,SAEKF,EAAAA,EAAAA,IAAUe,GAFf,cAEZH,EAFY,yBAGXA,EAASC,KAAKC,SAHH,4CAInB,EAEKE,WAhCW,WAgCG,IAAD,4HACXC,EADW,UACK,EAAKhB,SADV,iBAC2B,EAAKK,QADhC,oBACmD,EAAKJ,SADxD,SAEMF,EAAAA,EAAAA,IAAUiB,GAFhB,cAEXL,EAFW,yBAGVA,EAASC,MAHC,4CAIlB,EAEKK,QAtCW,WAsCA,IAAD,4HACRC,EADQ,UACK,EAAKlB,SADV,iBAC2B,EAAKK,QADhC,4BAC2D,EAAKJ,SADhE,SAESF,EAAAA,EAAAA,IAAUmB,GAFnB,cAERP,EAFQ,yBAGPA,EAASC,KAAKO,MAHP,4CAIf,EAEKC,UA5CW,WA4CE,IAAD,4HACVC,EADU,UACM,EAAKrB,SADX,iBAC4B,EAAKK,QADjC,4BAC4D,EAAKJ,SADjE,SAEOF,EAAAA,EAAAA,IAAUsB,GAFjB,cAEVV,EAFU,yBAGTA,EAASC,KAAKC,SAHL,4CAIjB,E","sources":["pages/Movies.jsx","services/api.js"],"sourcesContent":["import { API } from '../services/api'\nimport { useState } from \"react\";\nimport { useSearchParams, Link, useLocation  } from \"react-router-dom\";\n\n \n\nconst Movies = () => {\n    const [search, setSearch] = useState('')\n    const [movieLists, setMovieLists] = useState('')\n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    const location = useLocation()\n\n    console.log(searchParams)\n    const onChange = (evt) => {\n        setSearch(evt.target.value)\n        setSearchParams({ filter: evt.target.value })\n        }\n    \n    const searchMovie = async () => {\n           \n        try {\n                API.resetQuery()\n                API.setQuery(search)\n                const movie = await API.searchMovie()\n                setMovieLists(movie)\n\n            }\n            catch (error) {\n                console.log(error)\n            }\n    }\n    \n \n    \n    return (\n        <div>\n        <input type=\"text\" onChange={onChange} />\n        <button onClick={searchMovie}>Seacrh</button>\n        <ul>\n            {movieLists && movieLists.map(movieList => (\n            <li key={movieList.id}>\n                <Link to={`${movieList.id}`} state={{from: location}} >\n                    {movieList.title}\n                </Link>\n            </li>\n            ))}\n         </ul>\n        </div>)\n}\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: 'a0a346c810a8c3392ff6f3a908f46de3',\n  URL_TRENDING: 'trending/movie/day',\n  URL_SEARCH: 'search/movie',\n  query: [],\n  movieId: '',\n\n  setQuery(query) {\n    API.query = query;\n  },\n\n  setMovieId(movieId) {\n    API.movieId = movieId;\n  },\n\n  resetQuery() {\n    API.query = '';\n  },\n\n  async addMaterial() {\n    const url = `${this.BASE_URL}${this.URL_TRENDING}?api_key=${this.API_KEY}`;\n    const response = await axios.get(url);\n    return response.data.results;\n  },\n\n  async searchMovie() {\n    const urlSearch = `${this.BASE_URL}${this.URL_SEARCH}?query=${this.query}&api_key=${this.API_KEY}`;\n    const response = await axios.get(urlSearch);\n    return response.data.results;\n  },\n\n  async getDetails() {\n    const urlDetails = `${this.BASE_URL}movie/${this.movieId}?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlDetails);\n    return response.data;\n  },\n\n  async getCast() {\n    const urlCast = `${this.BASE_URL}movie/${this.movieId}/credits?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlCast);\n    return response.data.cast;\n  },\n\n  async getRevies() {\n    const urlReviews = `${this.BASE_URL}movie/${this.movieId}/reviews?api_key=${this.API_KEY}`;\n    const response = await axios.get(urlReviews);\n    return response.data.results;\n  },\n};\n"],"names":["useState","search","setSearch","movieLists","setMovieLists","useSearchParams","searchParams","setSearchParams","location","useLocation","console","log","searchMovie","API","movie","type","onChange","evt","target","value","filter","onClick","map","movieList","to","id","state","from","title","axios","BASE_URL","API_KEY","URL_TRENDING","URL_SEARCH","query","movieId","setQuery","setMovieId","resetQuery","addMaterial","url","response","data","results","urlSearch","getDetails","urlDetails","getCast","urlCast","cast","getRevies","urlReviews"],"sourceRoot":""}